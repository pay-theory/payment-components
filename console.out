index.js:2 [Violation] 'DOMContentLoaded' handler took 18351ms
index.js:95 [PT DEBUG] Routing decision: Field type "card-cvv" is transactional: false
index.js:224 [PT DEBUG] Rendering SiblingField for type: card-cvv
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-cvv) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
index.js:95 [PT DEBUG] Routing decision: Field type "card-name" is transactional: false
index.js:224 [PT DEBUG] Rendering SiblingField for type: card-name
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-name) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
index.js:95 [PT DEBUG] Routing decision: Field type "card-number" is transactional: true
index.js:221 [PT DEBUG] Rendering TransactionalField for type: card-number
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.js:95 [PT DEBUG] Routing decision: Field type "card-exp" is transactional: false
index.js:224 [PT DEBUG] Rendering SiblingField for type: card-exp
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-exp) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
index.js:95 [PT DEBUG] Routing decision: Field type "billing-zip" is transactional: false
index.js:224 [PT DEBUG] Rendering SiblingField for type: billing-zip
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (billing-zip) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
useFieldEvents.js:123 [PT DIAGNOSTIC] Basic initialization useEffect running for card-cvv
useFieldEvents.js:126 [PT DEBUG] Field card-cvv basic initialization complete
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
BaseField.jsx:153 [PT DIAGNOSTIC] No merchant UID available for card-cvv
BaseField.jsx:160 [PT DIAGNOSTIC] Field card-cvv has hub field: card-number
BaseField.jsx:161 [PT DIAGNOSTIC] Field card-cvv hub ready state: NOT READY
SiblingField.jsx:114 [PT DIAGNOSTIC] Field card-cvv setting up global listener for hub-ready messages from card-number
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-cvv hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-cvv hub ready state: false, trustedOrigin: null - not sending sibling ready.
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-cvv) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
securityUtils.js:92 [Security] card-cvv connected to parent undefined
useFieldEvents.js:123 [PT DIAGNOSTIC] Basic initialization useEffect running for card-name
useFieldEvents.js:126 [PT DEBUG] Field card-name basic initialization complete
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
BaseField.jsx:153 [PT DIAGNOSTIC] No merchant UID available for card-name
BaseField.jsx:160 [PT DIAGNOSTIC] Field card-name has hub field: card-number
BaseField.jsx:161 [PT DIAGNOSTIC] Field card-name hub ready state: NOT READY
SiblingField.jsx:114 [PT DIAGNOSTIC] Field card-name setting up global listener for hub-ready messages from card-number
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-name hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-name hub ready state: false, trustedOrigin: null - not sending sibling ready.
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-cvv) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-name) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-cvv hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-cvv hub ready state: false, trustedOrigin: http://127.0.0.1:8081 - not sending sibling ready.
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
securityUtils.js:92 [Security] card-name connected to parent undefined
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:123 [PT DIAGNOSTIC] Basic initialization useEffect running for card-number
useFieldEvents.js:126 [PT DEBUG] Field card-number basic initialization complete
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
BaseField.jsx:153 [PT DIAGNOSTIC] No merchant UID available for card-number
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '', displayValue: '', isValid: false, isFocused: false, isDirty: false, …}
TransactionalField.jsx:254 [PT CHECK] pt_token_ready check: memoizedOrigin=http://127.0.0.1:8081, fieldType=card-number
TransactionalField.jsx:256 [PT MSG] Sending pt_token_ready for element: card-number to origin: http://127.0.0.1:8081
TransactionalField.jsx:628 [PT FIELDS READY SIGNAL card-number] Signaling ready=false
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:694 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:695 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-name) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-name hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-name hub ready state: false, trustedOrigin: http://127.0.0.1:8081 - not sending sibling ready.
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
useFieldEvents.js:123 [PT DIAGNOSTIC] Basic initialization useEffect running for card-exp
useFieldEvents.js:126 [PT DEBUG] Field card-exp basic initialization complete
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
BaseField.jsx:153 [PT DIAGNOSTIC] No merchant UID available for card-exp
BaseField.jsx:160 [PT DIAGNOSTIC] Field card-exp has hub field: card-number
BaseField.jsx:161 [PT DIAGNOSTIC] Field card-exp hub ready state: NOT READY
SiblingField.jsx:114 [PT DIAGNOSTIC] Field card-exp setting up global listener for hub-ready messages from card-number
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-exp hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-exp hub ready state: false, trustedOrigin: null - not sending sibling ready.
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-exp) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
useFieldEvents.js:123 [PT DIAGNOSTIC] Basic initialization useEffect running for billing-zip
useFieldEvents.js:126 [PT DEBUG] Field billing-zip basic initialization complete
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
BaseField.jsx:153 [PT DIAGNOSTIC] No merchant UID available for billing-zip
BaseField.jsx:160 [PT DIAGNOSTIC] Field billing-zip has hub field: card-number
BaseField.jsx:161 [PT DIAGNOSTIC] Field billing-zip hub ready state: NOT READY
SiblingField.jsx:114 [PT DIAGNOSTIC] Field billing-zip setting up global listener for hub-ready messages from card-number
SiblingField.jsx:178 [PT DIAGNOSTIC] Field billing-zip hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field billing-zip hub ready state: false, trustedOrigin: null - not sending sibling ready.
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
securityUtils.js:92 [Security] card-exp connected to parent undefined
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (billing-zip) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (card-exp) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
securityUtils.js:92 [Security] billing-zip connected to parent undefined
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
SiblingField.jsx:178 [PT DIAGNOSTIC] Field card-exp hub ready state changed to: NOT READY
SiblingField.jsx:201 [PT DIAGNOSTIC] Field card-exp hub ready state: false, trustedOrigin: http://127.0.0.1:8081 - not sending sibling ready.
SiblingField.jsx:221 [PT DIAGNOSTIC] SiblingField (billing-zip) - Props passing to BaseField:
  sessionKey: false
  hostToken: false
  merchantUid: false
  isHubReady: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
SiblingField.jsx:178 [PT DIAGNOSTIC] Field billing-zip hub ready state changed to: NOT READY
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
SiblingField.jsx:201 [PT DIAGNOSTIC] Field billing-zip hub ready state: false, trustedOrigin: http://127.0.0.1:8081 - not sending sibling ready.
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-name
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
useFieldEvents.js:452 [PT DEBUG] Sending state for field: billing-zip
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-name
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-name
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-name
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-name:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-name
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-name with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-name
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:229 [PT DIAGNOSTIC] Received connection token for card-number
securityUtils.js:89 [Security] Invalid message structure (logging safe subset) {type: 'pt-static:connection_token', element: undefined}
t0 @ securityUtils.js:89
i @ useWindowListener.js:82
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:connection_token', data: {…}, async: true, ports: Array(1)}
securityUtils.js:92 [Security] Received connection token for card-number undefined
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:145 [PT DIAGNOSTIC] Attempting WebSocket connection for card-number with received token.
TransactionalField.jsx:153 [PT DIAGNOSTIC] Constructed WebSocket URL: wss://validate.secure.socket.paytheorylab.com/validate/?pt_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2hfcHJvY2Vzc29yIjoiZmluaXhfdjIiLCJhcGlfa2V5IjoidmFsaWRhdGUtcGF5dGhlb3J5bGFiLWU4MjQ4YTk5YmRkODU4YzY5NTczZjk5YWY0ZDdkMWRkIiwiY2FyZF9wcm9jZXNzb3IiOiJyYXBpZF9jb25uZWN0IiwiY2FzaF9wcm9jZXNzb3IiOiJwYXkgaXQgdG9kYXkiLCJjaGFsbGVuZ2UiOiJ3aTREQlR4Skhhb1g0MEpkbDVTODVGQWFtNkJGempDcUE2VFF6eXdTbnJFUWR0ZXR5eW9RdmIyVjU5cWgwNkgzLWpOWm10b1RvSWtJV1RJQ2ZuYWlGeDBUSkNSZ2NkUU5YN3p1T1JJYktNdEQ0Vm1ESVNacThlRkFJX1dmUE1maklabndtcnhfOXlSRUtxcEQ1ODRWYUZva09OV25ZSEJkYm5JaEd2ckE5UW89IiwiZXhwIjoxNzQ2MTg2NTYxLCJtZXJjaGFudF91aWQiOiI4OWY3MTAzYS1hYTE5LTRjMjUtODUzMi1iN2Q5YzA5NzBjNWIiLCJvcmlnaW4iOiJodHRwOi8vMTI3LjAuMC4xOjgwODEiLCJzZXNzaW9uX2tleSI6ImQ1ODgxODEzLTY1NjYtNGIzNy04MjVkLTIwZDYzYzg2OTY2YSJ9.dbd_-uFKlJLm1RcgDrnh74M2-Ep8jX35rcs8xlyMo5I
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-name] handleChange received value: "a"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-name] Value after formatting: "a"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-name] Validation result for RAW 'a': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-name
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-name] handleChange received value: "ar"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-name] Value after formatting: "ar"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-name] Validation result for RAW 'ar': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-name] handleChange received value: "aro"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-name] Value after formatting: "aro"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-name] Validation result for RAW 'aro': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-name] handleChange received value: "aron"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-name] Value after formatting: "aron"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-name] Validation result for RAW 'aron': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-name
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-name
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-name
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-name:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-name
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-name with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-name) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-name) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-name):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-name has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-name has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-name dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-name
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-name
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-name
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-name
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-name:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-name state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-number:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-number
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-number with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '', displayValue: '', isValid: false, isFocused: true, isDirty: false, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-name', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-name
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-name
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-name', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5', displayValue: '5', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "54"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "54"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '54': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '54', displayValue: '54', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "545"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '545', displayValue: '545', isValid: false, isFocused: true, isDirty: true, …}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454', displayValue: '5454', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "54545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '54545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-number
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=false, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '54545', displayValue: '5454 5', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: false
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = false
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=false, hubValid=false, siblingsValid=true)
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: false
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: false
  sessionKey: false
  hostToken: false
  merchantUid: false
TransactionalField.jsx:159 [PT DIAGNOSTIC] Socket connection established for card-number. Requesting Host Token.
TransactionalField.jsx:178 [PT MSG] Sent host:hostToken request for card-number
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:694 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:695 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 54"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 54"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 54': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 54', displayValue: '5454 54', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 545"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 545', displayValue: '5454 545', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454', displayValue: '5454 5454', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 54545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 54545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 54545', displayValue: '5454 5454 5', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 54"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 54"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 54': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 54', displayValue: '5454 5454 54', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 545"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 545', displayValue: '5454 5454 545', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 5454"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5454"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 5454': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 5454', displayValue: '5454 5454 5454', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 54545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5454 5"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 54545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-number
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = false
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=false, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 54545', displayValue: '5454 5454 5454 5', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: false
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = false
       
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: false
  hostToken: false
  merchantUid: false
TransactionalField.jsx:85 [PT MSG] handleSocketMessage called for card-number. Data: {"body": {"hostToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDYxODcxNjcuOTk5NzU2OCwiaG9zdFRva2VuIjp7ImFjaF9wcm9jZXNzb3IiOiJmaW5peF92MiIsImFwaV9rZXkiOiJ2YWxpZGF0ZS1wYXl0aGVvcnlsYWItZTgyNDhhOTliZGQ4NThjNjk1NzNmOTlhZjRkN2QxZGQiLCJjYXJkX3Byb2Nlc3NvciI6InJhcGlkX2Nvbm5lY3QiLCJjYXNoX3Byb2Nlc3NvciI6InBheSBpdCB0b2RheSIsImNoYWxsZW5nZSI6IndpNERCVHhKSGFvWDQwSmRsNVM4NUZBYW02QkZ6akNxQTZUUXp5d1NuckVRZHRldHl5b1F2YjJWNTlxaDA2SDMtak5abXRvVG9Ja0lXVElDZm5haUZ4MFRKQ1JnY2RRTlg3enVPUkliS010RDRWbURJU1pxOGVGQUlfV2ZQTWZqSVpud21yeF85eVJFS3FwRDU4NFZhRm9rT05XbllIQmRibkloR3ZyQTlRbz0iLCJleHAiOjE3NDYxODY1NjEsIm1lcmNoYW50X3VpZCI6Ijg5ZjcxMDNhLWFhMTktNGMyNS04NTMyLWI3ZDljMDk3MGM1YiIsIm9yaWdpbiI6Imh0dHA6Ly8xMjcuMC4wLjE6ODA4MSIsInNlc3Npb25fa2V5IjoiZDU4ODE4MTMtNjU2Ni00YjM3LTgyNWQtMjBkNjNjODY5NjZhIn0sInNlc3Npb25LZXkiOiJkNTg4MTgxMy02NTY2LTRiMzctODI1ZC0yMGQ2M2M4Njk2NmEifQ.Gq8U6NMIzoQdF1aNrlcj_emlEfj8bheYFycS-YgByVU", "merchantUid": "89f7103a-aa19-4c25-8532-b7d9c0970c5b", "publicKey": "CiKt2jNqMNR0Yx741WfMN6dhAM1iHegh296irO6cKz0=", "sessionKey": "d5881813-6566-4b37-825d-20d63c86966a"}, "type": "host_token"}
TransactionalField.jsx:87 [PT MSG] Parsed message for card-number: {body: {…}, type: 'host_token'}
TransactionalField.jsx:90 [PT CHECK] Is host_token message? [object Object]
TransactionalField.jsx:99 [PT STATE] TransactionalField (card-number) updated state: sessionKey=true, hostToken=true, merchantUid=true
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
TransactionalField.jsx:106 [PT DIAGNOSTIC] Hub field card-number setting hubReady=true after receiving host_token.
TransactionalField.jsx:115 [PT MSG] Sent pt-static:connected message for card-number.
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
useFieldEvents.js:153 [PT DIAGNOSTIC] Merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = true
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=true, origin=true
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:628 [PT FIELDS READY SIGNAL card-number] Signaling ready=true
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:694 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:695 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:628 [PT FIELDS READY SIGNAL card-number] Signaling ready=false
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 5454 54"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5454 54"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 5454 54': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
useFieldEvents.js:153 [PT DIAGNOSTIC] Merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = true
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=true, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 5454 54', displayValue: '5454 5454 5454 54', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 5454 545"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5454 545"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 5454 545': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
useFieldEvents.js:153 [PT DIAGNOSTIC] Merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = true
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=true, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 5454 545', displayValue: '5454 5454 5454 545', isValid: false, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-number] handleChange received value: "5454 5454 5454 5454"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-number] Value after formatting: "5454 5454 5454 5454"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-number] Validation result for RAW '5454 5454 5454 5454': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
useFieldEvents.js:153 [PT DIAGNOSTIC] Merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = true
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=true, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 5454 5454', displayValue: '5454 5454 5454 5454', isValid: true, isFocused: true, isDirty: true, …}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-number
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-number
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-number
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-number:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-number
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-number with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
socketUtils.js:81 [PT DIAGNOSTIC] Socket status for card-number: OPEN (1)
socketUtils.js:57 [PT DIAGNOSTIC] Session key available for card-number: d588...
useFieldEvents.js:153 [PT DIAGNOSTIC] Merchant UID available for card-number
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-number:
  dispatch = true
  socket = true
  sessionKey = true
  origin = true
  hubField = false
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Hub field card-number context state: socket=true, sessionKey=true, origin=true
TransactionalField.jsx:78 [PT STATE - HUB] Hub (card-number) received internal state update: {value: '5454 5454 5454 5454', displayValue: '5454 5454 5454 5454', isValid: true, isFocused: false, isDirty: true, …}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-exp
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-exp
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-exp:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-exp
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-exp with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-number
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-number', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "1"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "1"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '1': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "123"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 3"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '123': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 34"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 34"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 34': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 341"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 34"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 341': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 342"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 34"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 342': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 343"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 34"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 343': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-exp
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-exp
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-exp
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-exp:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-exp
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-exp with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-cvv
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-cvv
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-cvv
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-cvv:
      isInitialized = true
      hasDependencies = true
    
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-cvv with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-cvv
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-cvv
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-cvv
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-cvv:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-cvv
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-cvv with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-exp
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-exp
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-exp
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-exp:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-exp
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-exp with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 3"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 3"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 3': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / "
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / ': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "1"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "1"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '1': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: ""
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: ""
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "1"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "1"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '1': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "123"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 3"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '123': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-exp] handleChange received value: "12 / 34"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-exp] Value after formatting: "12 / 34"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-exp] Validation result for RAW '12 / 34': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-exp
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-exp
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-exp
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-exp:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-exp
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-exp with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-exp) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-exp) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-exp):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-exp has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-exp has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-exp dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-exp
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-exp
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-exp
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-exp
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-exp:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-exp state: dispatch=true, isHubReady=false
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for card-cvv
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for card-cvv
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-cvv:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for card-cvv
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-cvv with action: SET_FOCUS_STATE
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-exp', ports: Array(0)}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-exp
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-exp
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-exp', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - card-cvv] handleChange received value: "1"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-cvv] Value after formatting: "1"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-cvv] Validation result for RAW '1': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-cvv] handleChange received value: "12"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-cvv] Value after formatting: "12"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-cvv] Validation result for RAW '12': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - card-cvv] handleChange received value: "123"
BaseField.jsx:312 [PT VALIDATION DEBUG - card-cvv] Value after formatting: "123"
BaseField.jsx:316 [PT VALIDATION DEBUG - card-cvv] Validation result for RAW '123': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for card-cvv
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for card-cvv
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for card-cvv
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for card-cvv:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for card-cvv
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for card-cvv with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-cvv) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-cvv) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: card-cvv):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field card-cvv has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field card-cvv has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field card-cvv dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-cvv
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for card-cvv
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for card-cvv
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for card-cvv
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for card-cvv:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field card-cvv state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:696 [PT DIAGNOSTIC] Direct onFocus event triggered for billing-zip
useFieldEvents.js:542 [PT DIAGNOSTIC] handleFocus called for billing-zip
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for billing-zip
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for billing-zip:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:549 [PT DIAGNOSTIC] Focus event PASSED checks for billing-zip
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for billing-zip with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'card-cvv', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: card-cvv
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: card-cvv
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'card-cvv', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: billing-zip
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: false, hasErrors: false, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - billing-zip] handleChange received value: "1"
BaseField.jsx:312 [PT VALIDATION DEBUG - billing-zip] Value after formatting: "1"
BaseField.jsx:316 [PT VALIDATION DEBUG - billing-zip] Validation result for RAW '1': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - billing-zip] handleChange received value: "12"
BaseField.jsx:312 [PT VALIDATION DEBUG - billing-zip] Value after formatting: "12"
BaseField.jsx:316 [PT VALIDATION DEBUG - billing-zip] Validation result for RAW '12': {isValid: false, errors: Array(1)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: true, contributesToValidity: false}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: false, currentIsValid: false}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: billing-zip
BaseField.jsx:309 [PT VALIDATION DEBUG - billing-zip] handleChange received value: "123"
BaseField.jsx:312 [PT VALIDATION DEBUG - billing-zip] Value after formatting: "123"
BaseField.jsx:316 [PT VALIDATION DEBUG - billing-zip] Validation result for RAW '123': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: false}
index.ts:440 SecureTags Debug: Validity state changing {from: false, to: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:452 [PT DEBUG] Sending state for field: billing-zip
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:309 [PT VALIDATION DEBUG - billing-zip] handleChange received value: "1234"
BaseField.jsx:312 [PT VALIDATION DEBUG - billing-zip] Value after formatting: "1234"
BaseField.jsx:316 [PT VALIDATION DEBUG - billing-zip] Validation result for RAW '1234': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:309 [PT VALIDATION DEBUG - billing-zip] handleChange received value: "12345"
BaseField.jsx:312 [PT VALIDATION DEBUG - billing-zip] Value after formatting: "12345"
BaseField.jsx:316 [PT VALIDATION DEBUG - billing-zip] Validation result for RAW '12345': {isValid: true, errors: Array(0)}
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
useFieldEvents.js:710 [PT DIAGNOSTIC] Direct onBlur event triggered for billing-zip
useFieldEvents.js:575 [PT DIAGNOSTIC] handleBlur called for billing-zip
useFieldEvents.js:275 [PT DIAGNOSTIC] comprehensiveCheck() called for billing-zip
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:279 [PT DEBUG] comprehensiveCheck() for billing-zip:
      isInitialized = true
      hasDependencies = true
    
useFieldEvents.js:582 [PT DIAGNOSTIC] Blur event PASSED checks for billing-zip
BaseField.jsx:112 [PT DIAGNOSTIC] Dispatch called for billing-zip with action: SET_FOCUS_STATE
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (billing-zip) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (billing-zip) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:240 [PT DIAGNOSTIC] checkCriticalDependencies (Spoke: billing-zip):
  dispatch: true
  isHubReady: false
useFieldEvents.js:253 [PT DEBUG] Spoke field billing-zip has full dependencies: false
useFieldEvents.js:254 [PT DEBUG] Spoke field billing-zip has minimal dependencies: true
useFieldEvents.js:255 [PT DEBUG] Spoke field billing-zip dependency details:
        dispatch = true
        isHubReady = false
        hubField = card-number
      
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for billing-zip
socketUtils.js:67 [PT DIAGNOSTIC] No socket available for billing-zip
socketUtils.js:51 [PT DIAGNOSTIC] No session key available for billing-zip
useFieldEvents.js:155 [PT DIAGNOSTIC] No merchant UID available for billing-zip
useFieldEvents.js:159 [PT DIAGNOSTIC] Dependency status for billing-zip:
  dispatch = true
  socket = false
  sessionKey = false
  origin = true
  hubField = true
  isHubReady = false

useFieldEvents.js:172 [PT DEBUG] Spoke field billing-zip state: dispatch=true, isHubReady=false
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
BaseField.jsx:168 [PT DEBUG] BaseField (card-number) received message: {type: 'pt-static:relay', element: 'card-number', data: {…}, source: 'billing-zip', ports: Array(0)}
TransactionalField.jsx:479 [PT STATE - RELAY] Hub (card-number) processing RELAY from: billing-zip
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
BaseField.jsx:86 [PT DIAGNOSTIC] BaseField (card-number) - Rendering with props:
  socket: false
  sessionKey: false
  merchantUid: false
BaseField.jsx:124 [PT DIAGNOSTIC] BaseField (card-number) - Props before useFieldEvents:
  socket: false
  sessionKey: false
  merchantUid: false
  dispatch (local): true
useFieldEvents.js:216 [PT DIAGNOSTIC] checkCriticalDependencies (Hub: card-number):
  dispatch: true
  origin: true
  socket: true
  sessionKey: true
useFieldEvents.js:229 [PT DEBUG] Hub field card-number has essential dependencies: true
useFieldEvents.js:230 [PT DEBUG] Hub field card-number dependency details:
         dispatch = true
         origin = true
         socket = true
         sessionKey = true
       
useFieldEvents.js:690 [PT DIAGNOSTIC] applySafeEventHandlers called for card-number
TransactionalField.jsx:266 [PT DIAGNOSTIC] Sharing session key for card-number
TransactionalField.jsx:667 [PT READY - CALCULATION card-number] Setting hubReady: false (connected=true, hubValid=false, siblingsValid=true)
TransactionalField.jsx:52 [PT RENDER] TransactionalField rendering for type: card-number
TransactionalField.jsx:680 [PT DIAGNOSTIC] TransactionalField (card-number) - Retrieved socket instance: true
TransactionalField.jsx:683 [PT DIAGNOSTIC] TransactionalField (card-number) - Props passing to BaseField:
  socket: true
  sessionKey: true
  hostToken: true
  merchantUid: true
actions.ts:78 Transact Debug: Transaction initiated {props: {…}}
actions.ts:81 Transact Debug: Found transacting element {elementType: 'card', valid: true, ready: false}
actions.ts:43 SecureTags Debug: Checking field.complete {complete: false}
actions.ts:49 SecureTags Debug: Checking isInitialized (action in progress) {isInitialized: false}
actions.ts:55 SecureTags Debug: Checking field.valid {valid: true}
actions.ts:63 SecureTags Debug: Checking field.ready {ready: false}
actions.ts:89 Transact Debug: Field check failed {error: {…}}
useFieldEvents.js:452 [PT DEBUG] Sending state for field: billing-zip
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
index.ts:396 SecureTags Debug: Processing state update for element {element: 'billing-zip', newState: {…}}
index.ts:425 SecureTags Debug: Validity check - card-number {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-cvv {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - card-exp {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:425 SecureTags Debug: Validity check - billing-zip {included: true, isDirty: true, hasErrors: false, contributesToValidity: true}
index.ts:434 SecureTags Debug: Calculated overall validity {calculatedValid: true, currentIsValid: true}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
message.ts:21 SecureTags Debug: Received pt-static:state message {origin: 'https://validate.tags.static.paytheorylab.com', data: {…}}
